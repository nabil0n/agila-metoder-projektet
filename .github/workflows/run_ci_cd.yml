---
name: Python run CI CD

on:
  pull_request:
    paths-ignore:
    - '**/*.md'
    - .gitignore
    - .dvcignore

jobs:
  run_ci_cd_pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Git Repo
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Install latest Poetry version
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    # Load cached venv if cache exists
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml')}}

    # Install all dependencies, except for our code (--no-root), if cache does not exist
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    # Install the project
    - name: Install project
      run: poetry install --no-interaction

    # Run pre-commit hooks (with the exception of dvc-pre-commit)
    - name: Run pre-commit
      run: |
        source .venv/bin/activate
        SKIP=dvc-pre-commit pre-commit run --all-files

    # Run tests
    # - name: Test with pytest
    #   run: |
    #     source .venv/bin/activate
    #     poetry run pytest tests/
